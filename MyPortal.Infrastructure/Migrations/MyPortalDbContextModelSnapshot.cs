// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyPortal.Infrastructure.Data;

namespace MyPortal.Infrastructure.Migrations
{
    [DbContext(typeof(MyPortalDbContext))]
    partial class MyPortalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyPortal.Core.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("Phone")
                        .HasMaxLength(11);

                    b.Property<string>("PinCode")
                        .HasMaxLength(6);

                    b.Property<string>("State")
                        .HasMaxLength(30);

                    b.Property<string>("StreetAddress")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("MyPortal.Core.Entities.Dashboard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasMaxLength(1000);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasMaxLength(100);

                    b.Property<string>("Notes");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Dashboards");
                });

            modelBuilder.Entity("MyPortal.Core.Entities.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasMaxLength(40);

                    b.Property<int?>("ParentMenuId");

                    b.Property<string>("Url")
                        .HasColumnName("Url")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("ParentMenuId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("MyPortal.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ClientId")
                        .HasColumnName("ClientId");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("LastName")
                        .HasMaxLength(60);

                    b.Property<string>("Phone")
                        .HasMaxLength(11);

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MyPortal.Core.Entities.UserDashBoards", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DashboardId")
                        .HasColumnName("DashboardId");

                    b.Property<int>("UserId")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("DashboardId");

                    b.HasIndex("UserId");

                    b.ToTable("UserDashBoards");
                });

            modelBuilder.Entity("MyPortal.Core.Entities.Dashboard", b =>
                {
                    b.HasOne("MyPortal.Core.Entities.User")
                        .WithMany("Dashboards")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MyPortal.Core.Entities.Menu", b =>
                {
                    b.HasOne("MyPortal.Core.Entities.Menu", "ParentMenu")
                        .WithMany("SubMenus")
                        .HasForeignKey("ParentMenuId")
                        .HasConstraintName("FK_Parent_SubMenu");
                });

            modelBuilder.Entity("MyPortal.Core.Entities.User", b =>
                {
                    b.HasOne("MyPortal.Core.Entities.Client", "Client")
                        .WithMany("Users")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK_Users_Clients")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyPortal.Core.Entities.UserDashBoards", b =>
                {
                    b.HasOne("MyPortal.Core.Entities.Dashboard", "Dashboard")
                        .WithMany("DashboardUsers")
                        .HasForeignKey("DashboardId")
                        .HasConstraintName("FK_Dashboard_Users")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MyPortal.Core.Entities.User", "User")
                        .WithMany("UserDashboards")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_User_UDashboards")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
